pipeline {
agent any
stages {
stage('Python Lint'){
steps {
    sh 'pip install -r Receiver/requirements.txt'
    sh ' pylint $(find . -name "*.py" | xargs)'
    sh 'pylint-fail-under --fail_under 5.0 *.py'
}

}


// stage('Security') { 
// steps { 
//         } 
// }

stage('Package') {
    when {
        expression { env.GIT_BRANCH == 'origin/main' }
    }
    steps {
        withCredentials([string(credentialsId: 'DockerHub', variable: 'TOKEN')]) {
            sh "docker login -u 'falandi' -p '$TOKEN' docker.io"
            sh "docker build -t ${dockerRepoName}:latest --tag falandi/${dockerRepoName}:${imageName} ."
            sh "docker push falandi/${dockerRepoName}:${imageName}"
        }
    }
}

// stage('Deploy') {
         
// }
}

}
